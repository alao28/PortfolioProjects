SELECT * 
FROM PortfolioProjects..CovidDeaths1
ORDER BY 3, 4

SELECT *
FROM PortfolioProjects..CovidVaccinations1
ORDER BY 3, 4

SELECT location, date, total_cases, new_cases, total_deaths, population
FROM PortfolioProjects..CovidDeaths1
ORDER BY 1, 2

-- shows the likelihood of dying if you contract Covid in your country
SELECT location, date, total_cases, total_deaths, (total_deaths*1.0/total_cases*1.0)*100 AS DeathPercentage
FROM PortfolioProjects..CovidDeaths1
WHERE location LIKE '%states%'
ORDER BY 1, 2

-- shows what percentage of population got Covid
SELECT location, date, population, total_cases, (total_cases*1.0/population*1.0)*100 AS PercentPopulationInfected
FROM PortfolioProjects..CovidDeaths1
WHERE location LIKE '%states%'
ORDER BY 1, 2

-- looking at countries with the highest Infection Rate compared to Population
SELECT location, population, MAX(total_cases) AS HighestInfectionCounnt, MAX(total_cases*1.0/population*1.0)*100 AS PercentPopulationInfected
FROM PortfolioProjects..CovidDeaths1
GROUP BY location, population
ORDER BY PercentPopulationInfected DESC

-- Showing Countries with the Highest Death Count per Population
SELECT location, MAX(CAST(total_deaths as int)) AS TotalDeathCount
FROM PortfolioProjects..CovidDeaths1
WHERE continent IS NOT NULL
GROUP BY location
ORDER BY TotalDeathCount DESC

-- below adds in Canada into the North America death count
SELECT location, MAX(CAST(total_deaths as int)) AS TotalDeathCount
FROM PortfolioProjects..CovidDeaths1
WHERE continent IS NULL
GROUP BY location
ORDER BY TotalDeathCount DESC

-- showing Continents with Highest Death Count
SELECT continent, MAX(CAST(total_deaths as int)) AS TotalDeathCount
FROM PortfolioProjects..CovidDeaths1
WHERE continent IS NOT NULL
GROUP BY continent
ORDER BY TotalDeathCount DESC


-- Global Numbers
SELECT date, SUM(new_cases) AS TotalCases, SUM(new_deaths) AS TotalDeaths, SUM(CAST(new_deaths*1.0 AS int))/SUM(new_cases*1.0)*100 AS DeathPercentage
FROM PortfolioProjects..CovidDeaths1
WHERE continent IS NOT NULL
GROUP BY date
ORDER BY 1, 2

SELECT SUM(new_cases) AS TotalCases, SUM(new_deaths) AS TotalDeaths, SUM(CAST(new_deaths*1.0 AS int))/SUM(new_cases*1.0)*100 AS DeathPercentage
FROM PortfolioProjects..CovidDeaths1
WHERE continent IS NOT NULL
ORDER BY 1, 2
-- death percentage across the world



SELECT *
FROM PortfolioProjects..CovidVaccinations1

SELECT *
FROM PortfolioProjects..CovidDeaths1 dea
JOIN PortfolioProjects..CovidVaccinations1 vacc
    ON dea.location = vacc.location 
    AND dea.date = vacc.date 

-- Looking at Total Populations vs Vaccinations
SELECT dea.continent, dea.location, dea.date, dea.population, vacc.new_vaccinations
FROM PortfolioProjects..CovidDeaths1 dea
JOIN PortfolioProjects..CovidVaccinations1 vacc
    ON dea.location = vacc.location 
    AND dea.date = vacc.date 
WHERE dea.continent IS NOT NULL
ORDER BY 2,3 

SELECT dea.continent, dea.location, dea.date, dea.population, vacc.new_vaccinations
, SUM(CONVERT(bigint, vacc.new_vaccinations)) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS RollingPeopleVaccinated
FROM PortfolioProjects..CovidDeaths1 dea
JOIN PortfolioProjects..CovidVaccinations1 vacc
    ON dea.location = vacc.location 
    AND dea.date = vacc.date 
WHERE dea.continent IS NOT NULL
ORDER BY 2,3 

-- Use CTE
With PopvsVacc (continent, location, date, population, new_vaccinations, RollingPeopleVaccinated)
AS 
(
SELECT dea.continent, dea.location, dea.date, dea.population, vacc.new_vaccinations
, SUM(CONVERT(bigint, vacc.new_vaccinations)) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS RollingPeopleVaccinated
FROM PortfolioProjects..CovidDeaths1 dea
JOIN PortfolioProjects..CovidVaccinations1 vacc
    ON dea.location = vacc.location 
    AND dea.date = vacc.date 
WHERE dea.continent IS NOT NULL
)
SELECT *, (RollingPeopleVaccinated*1.0/population*1.0)*100
FROM PopvsVacc



-- Temp Table
DROP TABLE IF EXISTS #PercentPopulationVaccinated
Create Table #PercentPopulationVaccinated
(
continent nvarchar(255),
location nvarchar(255),
date datetime,
population numeric,
new_vaccinations numeric,
RollingPeopleVaccinated numeric
)
INSERT INTO #PercentPopulationVaccinated
SELECT dea.continent, dea.location, dea.date, dea.population, vacc.new_vaccinations
, SUM(CONVERT(bigint, vacc.new_vaccinations)) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS RollingPeopleVaccinated
FROM PortfolioProjects..CovidDeaths1 dea
JOIN PortfolioProjects..CovidVaccinations1 vacc
    ON dea.location = vacc.location 
    AND dea.date = vacc.date 
WHERE dea.continent IS NOT NULL

SELECT *, (RollingPeopleVaccinated*1.0/population*1.0)*100
FROM #PercentPopulationVaccinated



-- Creating View to Store Data for Later Visualizations

CREATE VIEW PercentPopulationVaccinated AS
SELECT dea.continent, dea.location, dea.date, dea.population, vacc.new_vaccinations
, SUM(CONVERT(bigint, vacc.new_vaccinations)) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS RollingPeopleVaccinated
FROM PortfolioProjects..CovidDeaths1 dea
JOIN PortfolioProjects..CovidVaccinations1 vacc
    ON dea.location = vacc.location 
    AND dea.date = vacc.date 
WHERE dea.continent IS NOT NULL

SELECT * 
FROM PercentPopulationVaccinated



CREATE VIEW PercentPopulationInfectedUS AS
SELECT location, date, population, total_cases, (total_cases*1.0/population*1.0)*100 AS PercentPopulationInfected
FROM PortfolioProjects..CovidDeaths1
WHERE location LIKE '%states%'

SELECT *
FROM PercentPopulationInfectedUS



CREATE VIEW PercentPopulationInfectedTaiwan AS
SELECT location, date, population, total_cases, (total_cases*1.0/population*1.0)*100 AS PercentPopulationInfected
FROM PortfolioProjects..CovidDeaths1
WHERE location LIKE '%taiwan%'

SELECT *
FROM PercentPopulationInfectedTaiwan



CREATE VIEW HighestPercentPopulationInfected AS
SELECT location, population, MAX(total_cases) AS HighestInfectionCounnt, MAX(total_cases*1.0/population*1.0)*100 AS PercentPopulationInfected
FROM PortfolioProjects..CovidDeaths1
GROUP BY location, population

SELECT *
FROM HighestPercentPopulationInfected



CREATE VIEW HighestDeathCount AS
SELECT continent, MAX(CAST(total_deaths as int)) AS TotalDeathCount
FROM PortfolioProjects..CovidDeaths1
WHERE continent IS NOT NULL
GROUP BY continent

SELECT * 
FROM HighestDeathCount